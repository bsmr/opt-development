#!/bin/bash

DLBASE="/home/bm/downloads"
GNUDLBASE="${DLBASE}/gnu.org"
SBCLDLBASE="${DLBASE}/sbcl.org"

action_download_emacs() {
	if [ ! -d "$GNUDLBASE" ] ; then mkdir -p "$GNUDLBASE" ; fi
	cd "$GNUDLBASE"
	wget -4 -nc "ftp://ftp.gnu.org/gnu/emacs/emacs-24.1.tar.bz2"
}

action_download_sbcl() {
	if [ ! -d "$SBCLDLBASE" ] ; then mkdir -p "$SBCLDLBASE" ; fi
	cd "$SBCLDLBASE"
	for F in 						\
		"sbcl-1.0.57-source.tar.bz2"			\
		"sbcl-1.0.57-x86-64-linux-binary.tar.bz2"	\
		"sbcl-1.0.57-x86-linux-binary.tar.bz2"		\
		""
	do
		if [ -z "$F" ] ; then continue ; fi
		DL="http://downloads.sourceforge.net/project/sbcl/sbcl/1.0.57/${F}"
		wget -4 -nc "${DL}"
	done
}

action_install_bin_sbcl() {
	SBCLBINARC=""
	SBCLBINDIR=""
	case $(uname -m) in
	x86_64)
		SBCLBINARC="sbcl-1.0.57-x86-64-linux-binary.tar.bz2"
		SBCLBINDIR="sbcl-1.0.57-x86-64-linux"
		;;
	x86)
		SBCLBINARC="sbcl-1.0.57-x86-linux-binary.tar.bz2"
		SBCLBINDIR="sbcl-1.0.57-x86-linux"
		;;
	esac
	if [ -z "$SBCLBINARC" ]
	then
		echo "Error: failed to assign SBCL binary archive!"
		exit 1
	fi
	SBCLBINDLPATH="${SBCLDLBASE}/${SBCLBINARC}"
	if [ ! -f "${SBCLBINDLPATH}" ]
	then
		echo "Error: can't access file \"${SBCLBINDLPATH}\"!"
		exit 1
	fi
	# create target install temp directory
	# change into target install temp directory
	# setup install environment
	LANG="C"
	INSTALL_ROOT="/opt/lisp/sbcl/1.0.57" sh install.sh
	# setup link
	ln -sf "/opt/lisp/sbcl/1.0.57" "/opt/lisp/sbcl/active"
	# cleanup/remove bin directory
}

action_install_sbcl_from_source() {
	# extract source to install directory
	#tar xf ~/downloads/sbcl.org/sbcl-1.0.57-source.tar.bz2
	cd "/home/bm/install/sbcl-1.0.57"
	export LANG="C"
	export SBCL_BASE="/opt/lisp/sbcl/active"
	export SBCL_HOME="/opt/lisp/sbcl/active/lib/sbcl"
	export PATH="${SBCL_BASE}/bin:$PATH"
	sh make.sh --fancy --prefix="/opt/lisp/sbcl/1.0.57" 2>&1 | tee "log-1-build.txt"
	(cd tests && sh run-tests.sh) 2>&1 | tee "log-2-tests.txt"
	(cd doc/manual && make) 2>&1 | tee "log-3-manuals.txt"
	unset INSTALL_ROOT
	unset SBCL_HOME
	sh install.sh 2>&1 | tee "log-4-install.txt"
	#
	# cleanup
	cd ..
	rm -rf sbcl-1.0.57/
	# 2nd pass
	tar xf "~/downloads/sbcl.org/sbcl-1.0.57-source.tar.bz2"
	cd "sbcl-1.0.57"
	export LANG="C"
	export SBCL_BASE="/opt/lisp/sbcl/active"
	export PATH="${SBCL_BASE}/bin:$PATH"
	sh make.sh --fancy --prefix="/opt/lisp/sbcl/1.0.57" 2>&1 | tee "log-1-build.txt"
	(cd tests && sh run-tests.sh) 2>&1 | tee "log-2-tests.txt"
	(cd doc/manual && make) 2>&1 | tee "log-3-manuals.txt"
	sh install.sh 2>&1 | tee "log-4-install.txt"
	# keep logs / cleanup
}

action_install_slime() {
	cd "/opt/lisp"
	cvs -d :pserver:anonymous:anonymous@common-lisp.net:/project/slime/cvsroot co slime
}

action_install_emacs() {
	#
	sudo aptitude install libgtk-3-dev libxaw7-dev libjpeg-dev libgif-dev libtiff4-dev
	sudo aptitude install libotf-dev libm17n-dev libxml2-dev libgpm-dev libdbus-1-dev librsvg2-dev imagemagick libgconf2-dev
	#
	tar xf ~/downloads/gnu.org/emacs-24.1.tar.bz2
	mkdir emacs-24.1-build
	cd emacs-24.1-build
	export LANG="C"
	../emacs-24.1/configure --prefix=/opt/emacs/24.1 2>&1 | tee "log-1-configure.txt"
	make all 2>&1 | tee "log-2-build.txt"
	make install 2>&1 | tee "log-3-install.txt"
	cd ..
	rm -rf emacs-24.1*
	ln -sf "/opt/emacs/24.1" "/opt/emacs/active"
}



#
# End Of File
#
