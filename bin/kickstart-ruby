#!/bin/bash

BN=$(basename $0)
RMVM="1.9.3"
RMVR="374"

action_usage() {
cat <<XEOF
usage: ${BN} [ check | setup | help ]
XEOF
}

action_help() {
action_usage
cat <<XEOF
	--- check ---------------------------------------------
	Are all dependencies to build ruby fulfilled?!
	--- setup ---------------------------------------------
	The "setup" command needs two arguments: the version
	and the patchlevel:

		> ${BN} setup <VERSION> <PATCHLEVEL>

	For example:

		> ${BN} setup ${RMVM} ${RMVR}

	-------------------------------------------------------
XEOF
}

action_find_versions() {
echo TBD
#a.b
#curl --silent ftp://ftp.ruby-lang.org/pub/ruby/ | grep '^d' | awk '{ print $9 }'

#curl --silent ftp://ftp.ruby-lang.org/pub/ruby/1.9/ | awk -F'ruby-' '{ print $2 }' | grep '\.tar\.bz2' | sed -e 's/\.tar\.bz2//g'

#a.b.c
#curl --silent --list-only 'ftp://ftp.ruby-lang.org/pub/ruby/1.9/' | grep 'ruby-' | grep '.tar.bz2' | sed -e 's/ruby-//g' -e 's/.tar.bz2//g' | awk -F- '{ print $1 }' | sort | uniq


# patchlevel
#curl --silent --list-only 'ftp://ftp.ruby-lang.org/pub/ruby/1.9/' | grep 'ruby-1.9.3-' | grep '.tar.bz2' | sed -e 's/ruby-1.9.3-//g' -e 's/.tar.bz2//g'

# single shot
#curl --silent --list-only 'ftp://ftp.ruby-lang.org/pub/ruby/' | grep 'ruby-' | grep '.tar.bz2' | sed -e 's/ruby-//g' -e 's/.tar.bz2//g' | grep -e '-p' | awk -F'-p' '{ printf "%s:%s\n",$1,$2 }'
}

action_prerequisites() {
sudo apt-get update
sudo apt-get update
sudo apt-get install            \
        build-essential         \
        libreadline-dev         \
        libssl-dev              \
        libyaml-dev             \
        libffi-dev              \
        libncurses5-dev         \
        libdb-dev               \
        libgdbm-dev
}

action_fetch_ruby() {
# ftp.ruby-lang.org
# ftp://ftp.ruby-lang.org/pub/ruby/1.9/
# /pub/ruby/1.9
# ruby-1.9.3-p286.tar.bz2
if [ ! -d "${KSR_ARCS}" ]
then
	mkdir -p "${KSR_ARCS}"
fi
if [ -f "${KSR_ARCS}/${RT}" ]
then
	echo "Skipping download."
	return
fi
RM=$(echo "${RV}" | awk -F. '{ printf "%s.%s", $1, $2}')
cd "${KSR_ARCS}"
wget -nc "ftp://ftp.ruby-lang.org/pub/ruby/${RM}/${RT}"
}

action_compile_ruby() {
KSR_TEMP=$(mktemp -d)
if [ "$?" != "0" ]
then
	echo "Error: failed to created temporary directory \"${KSR_TEMP}\"!"
	exit 1
fi

cd "${KSR_TEMP}"
tar xvf "${KSR_ARCS}/${RT}"
mkdir "${RB}"
cd "${RB}"

MO=""
#NUM_CPUS=$(nproc)
NUM_CPUS=$(cat /proc/cpuinfo | grep processor | wc -l)
if [ "$?" = "0" -a "$NUM_CPUS" > "1" ]
then
	MC=$((NUM_CPUS+1))
	MO="-j${MC}"
fi

#cat <<KSREOF
#***********************************************************************
#* RN : ${RN}
#* RD : ${RD}
#* MO : ${MO}
#***********************************************************************
#KSREOF

LANG=C
"../${RN}/configure"					\
		--prefix="${RD}"			\
		--enable-shared				\
		--enable-rpath				\
		CFLAGS="-fPIC" CXXFLAGS="-fPIC"		\
		LDFLAGS="-Wl,--rpath,${RD}/lib"		\
	&& make ${MO} all				\
	&& make test					\
	&& make install					\
	&& cat <<KSREOF
*** Add this to Your environment: *************************************
PATH="/opt/ruby/${RV}/bin:\$PATH"
MANPATH="/opt/ruby/${RV}/share/man"
export PATH MANPATH
***********************************************************************
KSREOF

if [ "$?" = "0" ]
then
	cd "/tmp"
	rm -rf "${KSR_TEMP}"
else
	cat <<KSREOF
*** WARNING ***********************************************************
* temporary directory was not deleted!
* ==> "${KSR_TEMP}" (without the quotes)
***********************************************************************
KSREOF
fi
}

action_setup() {
RV="$1"
RP="$2"

if [ -z "${RV}" ]
then
	cat <<KSREOF
Error: no ruby version specified!
       use something like "${RMVM}" (without the quotes)
KSREOF
	exit 1
fi

if [ -z "${RP}" ]
then
	cat <<KSREOF
Error: no ruby patchlevel specified!
       use something like "${RMVR}" (without the quotes)
KSREOF
	exit 1
fi

KSR_ARCS=""
for DD in "Downloads" "arcs"
do
	if [ ! -d "${HOME}/${DD}" ] ; then continue ; fi
	
	KSR_ARCS="$HOME/${DD}/ruby-lang.org"
	break
done

if [ -z "${KSR_ARCS}" ]
then
	cat <<KSREOF
Error: can't find download directory!
KSREOF
	exit 2
fi

RN="ruby-${RV}-p${RP}"
RT="${RN}.tar.bz2"
RS="${RN}"
RB="${RN}-build"
RD="/opt/ruby/${RV}"

action_prerequisites
action_fetch_ruby	"${RV}" "${RP}"
action_compile_ruby	"${RV}" "${RP}"
}

case $1 in
c|check)
	action_prerequisites
;;
s|setup)
	action_setup "$2" "$3"
;;
h|help)
	action_help
;;
*)
	action_usage
	exit 1
;;
esac

exit 0

#
# End Of File
#
